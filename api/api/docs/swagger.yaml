basePath: /api/v1
definitions:
  github_com_marceloamoreno_goapi_internal_domain_user_service.RequestForgotPasswordInputDTO:
    properties:
      email:
        type: string
    type: object
  github_com_marceloamoreno_goapi_internal_domain_user_service.RequestLoginInputDTO:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  github_com_marceloamoreno_goapi_internal_domain_user_service.RequestRefreshTokenInputDTO:
    properties:
      refresh_token:
        type: string
      user_id:
        type: integer
    type: object
  github_com_marceloamoreno_goapi_internal_domain_user_service.RequestUpdateUserPasswordInputDTO:
    properties:
      hash:
        type: string
      password:
        type: string
    type: object
  github_com_marceloamoreno_goapi_internal_domain_user_service.RequestVerifyUserInputDTO:
    properties:
      hash:
        type: string
    type: object
  github_com_marceloamoreno_goapi_internal_domain_user_usecase.CreateAuthOutputDTO:
    properties:
      active:
        type: boolean
      refresh_token:
        type: string
      refresh_token_expires_in:
        type: integer
      token:
        type: string
      token_expires_in:
        type: integer
      user_id:
        type: integer
    type: object
  github_com_marceloamoreno_goapi_internal_domain_user_usecase.CreateAvatarInputDTO:
    properties:
      svg:
        type: string
    type: object
  github_com_marceloamoreno_goapi_internal_domain_user_usecase.CreatePermissionInputDTO:
    properties:
      description:
        type: string
      internal_name:
        type: string
      name:
        type: string
    type: object
  github_com_marceloamoreno_goapi_internal_domain_user_usecase.CreateRoleInputDTO:
    properties:
      description:
        type: string
      internal_name:
        type: string
      name:
        type: string
    type: object
  github_com_marceloamoreno_goapi_internal_domain_user_usecase.CreateRolePermissionInputDTO:
    properties:
      permission_ids:
        items:
          type: integer
        type: array
      role_id:
        type: integer
    type: object
  github_com_marceloamoreno_goapi_internal_domain_user_usecase.CreateUserInputDTO:
    properties:
      avatar_id:
        type: integer
      email:
        type: string
      name:
        type: string
      password:
        type: string
      role_id:
        type: integer
    type: object
  github_com_marceloamoreno_goapi_internal_domain_user_usecase.DeleteRolePermissionInputDTO:
    properties:
      role_id:
        type: integer
    type: object
  github_com_marceloamoreno_goapi_internal_domain_user_usecase.GetAvatarOutputDTO:
    properties:
      created_at:
        type: string
      id:
        type: integer
      svg:
        type: string
      updated_at:
        type: string
    type: object
  github_com_marceloamoreno_goapi_internal_domain_user_usecase.GetAvatarsOutputDTO:
    properties:
      created_at:
        type: string
      id:
        type: integer
      svg:
        type: string
      updated_at:
        type: string
    type: object
  github_com_marceloamoreno_goapi_internal_domain_user_usecase.GetPermissionOutputDTO:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      internal_name:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  github_com_marceloamoreno_goapi_internal_domain_user_usecase.GetPermissionsOutputDTO:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      internal_name:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  github_com_marceloamoreno_goapi_internal_domain_user_usecase.GetRoleOutputDTO:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      internal_name:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  github_com_marceloamoreno_goapi_internal_domain_user_usecase.GetRolePermissionsOutputDTO:
    properties:
      id:
        type: integer
      permission_ids:
        items:
          type: integer
        type: array
      role_id:
        type: integer
    type: object
  github_com_marceloamoreno_goapi_internal_domain_user_usecase.GetRolesOutputDTO:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      internal_name:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  github_com_marceloamoreno_goapi_internal_domain_user_usecase.GetUserOutputDTO:
    properties:
      active:
        type: boolean
      avatar_id:
        type: integer
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      role_id:
        type: integer
      updated_at:
        type: string
    type: object
  github_com_marceloamoreno_goapi_internal_domain_user_usecase.GetUsersOutputDTO:
    properties:
      active:
        type: boolean
      avatar_id:
        type: integer
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      role_id:
        type: integer
      updated_at:
        type: string
    type: object
  github_com_marceloamoreno_goapi_internal_domain_user_usecase.UpdateAvatarInputDTO:
    properties:
      id:
        type: integer
      svg:
        type: string
    type: object
  github_com_marceloamoreno_goapi_internal_domain_user_usecase.UpdatePermissionInputDTO:
    properties:
      description:
        type: string
      id:
        type: integer
      internal_name:
        type: string
      name:
        type: string
    type: object
  github_com_marceloamoreno_goapi_internal_domain_user_usecase.UpdateRoleInputDTO:
    properties:
      description:
        type: string
      id:
        type: integer
      internal_name:
        type: string
      name:
        type: string
    type: object
  github_com_marceloamoreno_goapi_internal_domain_user_usecase.UpdateUserInputDTO:
    properties:
      avatar_id:
        type: integer
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      role_id:
        type: integer
    type: object
  github_com_marceloamoreno_goapi_internal_shared_response.Response:
    properties:
      data: {}
    type: object
  github_com_marceloamoreno_goapi_internal_shared_response.ResponseError:
    properties:
      err:
        type: string
    type: object
host: localhost:3000
info:
  contact: {}
  description: This is a sample server for GO tools.
  title: GO API
  version: v1
paths:
  /Avatar:
    get:
      consumes:
      - application/json
      description: Get Avatars
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_domain_user_usecase.GetAvatarsOutputDTO'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.ResponseError'
      security:
      - JWT: []
      summary: Get Avatars
      tags:
      - Avatar
  /Avatar/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Avatar
      parameters:
      - description: Avatar ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.ResponseError'
      security:
      - ApiKeyAuth: []
      - JWT: []
      summary: Delete Avatar
      tags:
      - Avatar
    get:
      consumes:
      - application/json
      description: Get Avatar
      parameters:
      - description: Avatar ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_domain_user_usecase.GetAvatarOutputDTO'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.ResponseError'
      security:
      - JWT: []
      summary: Get Avatar
      tags:
      - Avatar
    put:
      consumes:
      - application/json
      description: Update Avatar
      parameters:
      - description: Avatar ID
        in: path
        name: id
        required: true
        type: string
      - description: Avatar
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_domain_user_usecase.UpdateAvatarInputDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.ResponseError'
      security:
      - JWT: []
      summary: Update Avatar
      tags:
      - Avatar
  /auth/forgot-password:
    post:
      consumes:
      - application/json
      description: Forgot Password
      parameters:
      - description: User
        in: body
        name: auth
        required: true
        schema:
          $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_domain_user_service.RequestForgotPasswordInputDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.ResponseError'
      summary: Forgot Password
      tags:
      - Auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: Get JWT
      parameters:
      - description: User
        in: body
        name: auth
        required: true
        schema:
          $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_domain_user_service.RequestLoginInputDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_domain_user_usecase.CreateAuthOutputDTO'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.ResponseError'
      summary: Get JWT
      tags:
      - Auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Get Refresh JWT
      parameters:
      - description: User
        in: body
        name: auth
        required: true
        schema:
          $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_domain_user_service.RequestRefreshTokenInputDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_domain_user_usecase.CreateAuthOutputDTO'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.ResponseError'
      summary: Get Refresh JWT
      tags:
      - Auth
  /auth/update-password:
    post:
      consumes:
      - application/json
      description: Update User Password
      parameters:
      - description: User
        in: body
        name: auth
        required: true
        schema:
          $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_domain_user_service.RequestUpdateUserPasswordInputDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.ResponseError'
      summary: Update User Password
      tags:
      - Auth
  /auth/verify-user:
    post:
      consumes:
      - application/json
      description: Verify User
      parameters:
      - description: User
        in: body
        name: auth
        required: true
        schema:
          $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_domain_user_service.RequestVerifyUserInputDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.ResponseError'
      summary: Verify User
      tags:
      - Auth
  /permission:
    get:
      consumes:
      - application/json
      description: Get Permissions
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_domain_user_usecase.GetPermissionsOutputDTO'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.ResponseError'
      security:
      - JWT: []
      summary: Get Permissions
      tags:
      - Permission
  /permission/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Permission
      parameters:
      - description: Permission ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.ResponseError'
      security:
      - ApiKeyAuth: []
      - JWT: []
      summary: Delete Permission
      tags:
      - Permission
    get:
      consumes:
      - application/json
      description: Get Permission
      parameters:
      - description: Permission ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_domain_user_usecase.GetPermissionOutputDTO'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.ResponseError'
      security:
      - JWT: []
      summary: Get Permission
      tags:
      - Permission
    put:
      consumes:
      - application/json
      description: Update Permission
      parameters:
      - description: Permission ID
        in: path
        name: id
        required: true
        type: string
      - description: Permission
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_domain_user_usecase.UpdatePermissionInputDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.ResponseError'
      security:
      - JWT: []
      summary: Update Permission
      tags:
      - Permission
  /role:
    get:
      consumes:
      - application/json
      description: Get Roles
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_domain_user_usecase.GetRolesOutputDTO'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.ResponseError'
      security:
      - JWT: []
      summary: Get Roles
      tags:
      - Role
    post:
      consumes:
      - application/json
      description: Create Role
      parameters:
      - description: Role
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_domain_user_usecase.CreateRoleInputDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.ResponseError'
      security:
      - JWT: []
      summary: Create Role
      tags:
      - Role
  /role/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Role
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.ResponseError'
      security:
      - ApiKeyAuth: []
      - JWT: []
      summary: Delete Role
      tags:
      - Role
    get:
      consumes:
      - application/json
      description: Get Role
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_domain_user_usecase.GetRoleOutputDTO'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.ResponseError'
      security:
      - JWT: []
      summary: Get Role
      tags:
      - Role
    put:
      consumes:
      - application/json
      description: Update Role
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      - description: Role
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_domain_user_usecase.UpdateRoleInputDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.ResponseError'
      security:
      - JWT: []
      summary: Update Role
      tags:
      - Role
  /role/{id}/permission:
    get:
      consumes:
      - application/json
      description: Get Role Permissions
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_domain_user_usecase.GetRolePermissionsOutputDTO'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.ResponseError'
      security:
      - JWT: []
      summary: Get Role Permissions
      tags:
      - RolePermission
    post:
      consumes:
      - application/json
      description: Create Role Permission
      parameters:
      - description: RolePermission
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_domain_user_usecase.CreateRolePermissionInputDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.ResponseError'
      security:
      - JWT: []
      summary: Create Role Permission
      tags:
      - RolePermission
    put:
      consumes:
      - application/json
      description: Update Role Permission
      parameters:
      - description: RolePermission ID
        in: path
        name: id
        required: true
        type: string
      - description: RolePermission
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_domain_user_usecase.DeleteRolePermissionInputDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.ResponseError'
      security:
      - JWT: []
      summary: Update Role Permission
      tags:
      - RolePermission
  /user:
    get:
      consumes:
      - application/json
      description: Get Users
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_domain_user_usecase.GetUsersOutputDTO'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.ResponseError'
      security:
      - JWT: []
      summary: Get Users
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Create User
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_domain_user_usecase.CreateUserInputDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.ResponseError'
      security:
      - JWT: []
      summary: Create User
      tags:
      - User
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: Delete User
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.ResponseError'
      security:
      - ApiKeyAuth: []
      - JWT: []
      summary: Delete User
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Get User
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_domain_user_usecase.GetUserOutputDTO'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.ResponseError'
      security:
      - JWT: []
      summary: Get User
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Update User
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_domain_user_usecase.UpdateUserInputDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_marceloamoreno_goapi_internal_shared_response.ResponseError'
      security:
      - JWT: []
      summary: Update User
      tags:
      - User
schemes:
- http
securityDefinitions:
  JWT:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
