version: '3.9'

services:

  api:
    container_name: api
    build:
      context: .
      dockerfile: ./api/.docker/dockerfile
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      PORT: ${PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}
    ports:
      - ${PORT}:3000
    volumes:
      - ./api/:/api
    networks:
      - net

  db:
    container_name: db
    image: postgres:14-alpine
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
    - ${DB_PORT}:5432
    networks:
      - net

  # keycloak:
  #   container_name: keycloak
  #   image: quay.io/keycloak/keycloak:latest
  #   environment:
  #     KEYCLOAK_ADMIN: admin
  #     KEYCLOAK_ADMIN_PASSWORD: admin
  #     KC_DB: postgres
  #     KC_DB_URL: jdbc:postgresql://keycloak_db:5432/keycloak
  #     KC_DB_USER: keycloak
  #     KC_DB_PASSWORD: keycloak
  #     KC_HOSTNAME: localhost
  #     KC_PORT: ${KEYCLOAK_PORT}
  #   ports:
  #     - ${KEYCLOAK_PORT}:8080
  #   command: ["start-dev"]

  # keycloak_db:
  #   container_name: keycloak_db
  #   image: postgres:14-alpine
  #   volumes:
  #     - keycloak_db_data:/var/lib/postgresql/data
  #   environment:
  #     POSTGRES_DB: keycloak
  #     POSTGRES_USER: keycloak
  #     POSTGRES_PASSWORD: keycloak
  #   ports:
  #   - ${KEYCLOAK_DB_PORT}:5432
  
  # kong-database:
  #   image: postgres:9.6
  #   container_name: kong-database
  #   ports:
  #     - 5432:5432
  #   environment:
  #     - POSTGRES_USER=kong
  #     - POSTGRES_DB=kong
  #     - POSTGRES_PASSWORD=kong
  #   volumes:
  #     - "db-data-kong-postgres:/var/lib/postgresql/data"

  # kong-migrations:
  #   image: kong
  #   environment:
  #     - KONG_DATABASE=postgres
  #     - KONG_PG_HOST=kong-database
  #     - KONG_PG_PASSWORD=kong
  #     - KONG_CASSANDRA_CONTACT_POINTS=kong-database
  #   command: kong migrations bootstrap
  #   restart: on-failure
  #   depends_on:
  #     - kong-database

  # kong:
  #   image: kong
  #   container_name: kong
  #   environment:
  #     - LC_CTYPE=en_US.UTF-8
  #     - LC_ALL=en_US.UTF-8
  #     - KONG_DATABASE=postgres
  #     - KONG_PG_HOST=kong-database
  #     - KONG_PG_USER=kong
  #     - KONG_PG_PASSWORD=kong
  #     - KONG_CASSANDRA_CONTACT_POINTS=kong-database
  #     - KONG_PROXY_ACCESS_LOG=/dev/stdout
  #     - KONG_ADMIN_ACCESS_LOG=/dev/stdout
  #     - KONG_PROXY_ERROR_LOG=/dev/stderr
  #     - KONG_ADMIN_ERROR_LOG=/dev/stderr
  #     - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
  #   restart: on-failure
  #   ports:
  #     - 8000:8000
  #     - 8443:8443
  #     - 8001:8001
  #     - 8444:8444
  #   links:
  #     - kong-database:kong-database
  #   depends_on:
  #     - kong-migrations

  # konga:
  #   image: pantsel/konga
  #   ports:
  #     - 1337:1337
  #   links:
  #     - kong:kong
  #   container_name: konga
  #   environment:
  #     - NODE_ENV=production

  # rabbitmq:
  #   image: rabbitmq:management
  #   container_name: rabbitmq
  #   environment:
  #     - RABBITMQ_DEFAULT_USER=guest
  #     - RABBITMQ_DEFAULT_PASS=guest
  #   ports:
  #     - "5672:5672"
  #     - "15672:15672"

volumes:
  db_data:
    driver: local
  # keycloak_db_data:
  #   driver: local
  # db-data-kong-postgres:
  #   driver: local

networks:
  net:
    driver: bridge
